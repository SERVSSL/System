// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace SERV.system.servssl.org.uk {
    
    
    /// <remarks/>
    [System.Web.Services.WebServiceBinding(Name="MobileServiceSoap", Namespace="http://tempuri.org/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MobileService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback StartSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GoOnDutyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GoOffDutyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentControllerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCalendarBulletinsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextShiftOperationCompleted;
        
        public MobileService() {
            this.Url = "http://system.servssl.org.uk/Service/MobileService.asmx";
        }
        
        public MobileService(string url) {
            this.Url = url;
        }
        
        public event StartSessionCompletedEventHandler StartSessionCompleted;
        
        public event GoOnDutyCompletedEventHandler GoOnDutyCompleted;
        
        public event GoOffDutyCompletedEventHandler GoOffDutyCompleted;
        
        public event UpdateLocationCompletedEventHandler UpdateLocationCompleted;
        
        public event GetCurrentControllerCompletedEventHandler GetCurrentControllerCompleted;
        
        public event GetCalendarBulletinsCompletedEventHandler GetCalendarBulletinsCompleted;
        
        public event GetNextShiftCompletedEventHandler GetNextShiftCompleted;
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartSession", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public User StartSession(string username, string password) {
            object[] results = this.Invoke("StartSession", new object[] {
                        username,
                        password});
            return ((User)(results[0]));
        }
        
        public System.IAsyncResult BeginStartSession(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StartSession", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        public User EndStartSession(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((User)(results[0]));
        }
        
        public void StartSessionAsync(string username, string password) {
            this.StartSessionAsync(username, password, null);
        }
        
        public void StartSessionAsync(string username, string password, object userState) {
            if ((this.StartSessionOperationCompleted == null)) {
                this.StartSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartSessionCompleted);
            }
            this.InvokeAsync("StartSession", new object[] {
                        username,
                        password}, this.StartSessionOperationCompleted, userState);
        }
        
        private void OnStartSessionCompleted(object arg) {
            if ((this.StartSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartSessionCompleted(this, new StartSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GoOnDuty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public bool GoOnDuty() {
            object[] results = this.Invoke("GoOnDuty", new object[0]);
            return ((bool)(results[0]));
        }
        
        public System.IAsyncResult BeginGoOnDuty(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GoOnDuty", new object[0], callback, asyncState);
        }
        
        public bool EndGoOnDuty(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        public void GoOnDutyAsync() {
            this.GoOnDutyAsync(null);
        }
        
        public void GoOnDutyAsync(object userState) {
            if ((this.GoOnDutyOperationCompleted == null)) {
                this.GoOnDutyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGoOnDutyCompleted);
            }
            this.InvokeAsync("GoOnDuty", new object[0], this.GoOnDutyOperationCompleted, userState);
        }
        
        private void OnGoOnDutyCompleted(object arg) {
            if ((this.GoOnDutyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GoOnDutyCompleted(this, new GoOnDutyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GoOffDuty", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public bool GoOffDuty() {
            object[] results = this.Invoke("GoOffDuty", new object[0]);
            return ((bool)(results[0]));
        }
        
        public System.IAsyncResult BeginGoOffDuty(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GoOffDuty", new object[0], callback, asyncState);
        }
        
        public bool EndGoOffDuty(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        public void GoOffDutyAsync() {
            this.GoOffDutyAsync(null);
        }
        
        public void GoOffDutyAsync(object userState) {
            if ((this.GoOffDutyOperationCompleted == null)) {
                this.GoOffDutyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGoOffDutyCompleted);
            }
            this.InvokeAsync("GoOffDuty", new object[0], this.GoOffDutyOperationCompleted, userState);
        }
        
        private void OnGoOffDutyCompleted(object arg) {
            if ((this.GoOffDutyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GoOffDutyCompleted(this, new GoOffDutyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public bool UpdateLocation(string lat, string lng) {
            object[] results = this.Invoke("UpdateLocation", new object[] {
                        lat,
                        lng});
            return ((bool)(results[0]));
        }
        
        public System.IAsyncResult BeginUpdateLocation(string lat, string lng, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateLocation", new object[] {
                        lat,
                        lng}, callback, asyncState);
        }
        
        public bool EndUpdateLocation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        public void UpdateLocationAsync(string lat, string lng) {
            this.UpdateLocationAsync(lat, lng, null);
        }
        
        public void UpdateLocationAsync(string lat, string lng, object userState) {
            if ((this.UpdateLocationOperationCompleted == null)) {
                this.UpdateLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLocationCompleted);
            }
            this.InvokeAsync("UpdateLocation", new object[] {
                        lat,
                        lng}, this.UpdateLocationOperationCompleted, userState);
        }
        
        private void OnUpdateLocationCompleted(object arg) {
            if ((this.UpdateLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLocationCompleted(this, new UpdateLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCurrentController", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Member GetCurrentController() {
            object[] results = this.Invoke("GetCurrentController", new object[0]);
            return ((Member)(results[0]));
        }
        
        public System.IAsyncResult BeginGetCurrentController(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCurrentController", new object[0], callback, asyncState);
        }
        
        public Member EndGetCurrentController(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Member)(results[0]));
        }
        
        public void GetCurrentControllerAsync() {
            this.GetCurrentControllerAsync(null);
        }
        
        public void GetCurrentControllerAsync(object userState) {
            if ((this.GetCurrentControllerOperationCompleted == null)) {
                this.GetCurrentControllerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentControllerCompleted);
            }
            this.InvokeAsync("GetCurrentController", new object[0], this.GetCurrentControllerOperationCompleted, userState);
        }
        
        private void OnGetCurrentControllerCompleted(object arg) {
            if ((this.GetCurrentControllerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentControllerCompleted(this, new GetCurrentControllerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCalendarBulletins", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public string[] GetCalendarBulletins() {
            object[] results = this.Invoke("GetCalendarBulletins", new object[0]);
            return ((string[])(results[0]));
        }
        
        public System.IAsyncResult BeginGetCalendarBulletins(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCalendarBulletins", new object[0], callback, asyncState);
        }
        
        public string[] EndGetCalendarBulletins(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        public void GetCalendarBulletinsAsync() {
            this.GetCalendarBulletinsAsync(null);
        }
        
        public void GetCalendarBulletinsAsync(object userState) {
            if ((this.GetCalendarBulletinsOperationCompleted == null)) {
                this.GetCalendarBulletinsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCalendarBulletinsCompleted);
            }
            this.InvokeAsync("GetCalendarBulletins", new object[0], this.GetCalendarBulletinsOperationCompleted, userState);
        }
        
        private void OnGetCalendarBulletinsCompleted(object arg) {
            if ((this.GetCalendarBulletinsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCalendarBulletinsCompleted(this, new GetCalendarBulletinsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNextShift", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public CalendarEntry GetNextShift() {
            object[] results = this.Invoke("GetNextShift", new object[0]);
            return ((CalendarEntry)(results[0]));
        }
        
        public System.IAsyncResult BeginGetNextShift(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNextShift", new object[0], callback, asyncState);
        }
        
        public CalendarEntry EndGetNextShift(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CalendarEntry)(results[0]));
        }
        
        public void GetNextShiftAsync() {
            this.GetNextShiftAsync(null);
        }
        
        public void GetNextShiftAsync(object userState) {
            if ((this.GetNextShiftOperationCompleted == null)) {
                this.GetNextShiftOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextShiftCompleted);
            }
            this.InvokeAsync("GetNextShift", new object[0], this.GetNextShiftOperationCompleted, userState);
        }
        
        private void OnGetNextShiftCompleted(object arg) {
            if ((this.GetNextShiftCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextShiftCompleted(this, new GetNextShiftCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class User {
        
        /// <remarks/>
        public int UserID;
        
        /// <remarks/>
        public int MemberID;
        
        /// <remarks/>
        public Member Member;
        
        /// <remarks/>
        public int UserLevelID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="dateTime")]
        public System.Nullable<System.DateTime> LastLoginDate;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Member {
        
        /// <remarks/>
        public int MemberID;
        
        /// <remarks/>
        public string FirstName;
        
        /// <remarks/>
        public string LastName;
        
        /// <remarks/>
        public System.DateTime JoinDate;
        
        /// <remarks/>
        public string JoinDateString;
        
        /// <remarks/>
        public string EmailAddress;
        
        /// <remarks/>
        public string MobileNumber;
        
        /// <remarks/>
        public string HomeNumber;
        
        /// <remarks/>
        public string Occupation;
        
        /// <remarks/>
        public int MemberStatusID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="int")]
        public System.Nullable<int> AvailabilityID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="dateTime")]
        public System.Nullable<System.DateTime> RiderAssesmentPassDate;
        
        /// <remarks/>
        public string RiderAssesmentPassDateString;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="dateTime")]
        public System.Nullable<System.DateTime> AdQualPassDate;
        
        /// <remarks/>
        public string AdQualPassDateString;
        
        /// <remarks/>
        public string AdQualType;
        
        /// <remarks/>
        public string BikeType;
        
        /// <remarks/>
        public string CarType;
        
        /// <remarks/>
        public string Notes;
        
        /// <remarks/>
        public string Address1;
        
        /// <remarks/>
        public string Address2;
        
        /// <remarks/>
        public string Address3;
        
        /// <remarks/>
        public string Town;
        
        /// <remarks/>
        public string County;
        
        /// <remarks/>
        public string PostCode;
        
        /// <remarks/>
        public int BirthYear;
        
        /// <remarks/>
        public string NextOfKin;
        
        /// <remarks/>
        public string NextOfKinAddress;
        
        /// <remarks/>
        public string NextOfKinPhone;
        
        /// <remarks/>
        public bool LegalConfirmation;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="dateTime")]
        public System.Nullable<System.DateTime> LeaveDate;
        
        /// <remarks/>
        public string LeaveDateString;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="dateTime")]
        public System.Nullable<System.DateTime> LastGdpgmpdAte;
        
        /// <remarks/>
        public string LastGDPGMPDateString;
        
        /// <remarks/>
        public Tag[] Tags;
        
        /// <remarks/>
        public int UserLevelID;
        
        /// <remarks/>
        public string UserLevelName;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Tag {
        
        /// <remarks/>
        public int TagID;
        
        /// <remarks/>
        public string TagName;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CalendarEntry {
        
        /// <remarks/>
        public int CalendarID;
        
        /// <remarks/>
        public string CalendarName;
        
        /// <remarks/>
        public int CalendarSortOrder;
        
        /// <remarks/>
        public int CalendarEntryID;
        
        /// <remarks/>
        public System.DateTime EntryDate;
        
        /// <remarks/>
        public int MemberID;
        
        /// <remarks/>
        public bool CoverNeeded;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, DataType="int")]
        public System.Nullable<int> CoverCalendarEntryID;
        
        /// <remarks/>
        public bool AdHoc;
        
        /// <remarks/>
        public bool ManuallyAdded;
        
        /// <remarks/>
        public string MemberName;
    }
    
    public partial class StartSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StartSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    public delegate void StartSessionCompletedEventHandler(object sender, StartSessionCompletedEventArgs args);
    
    public partial class GoOnDutyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GoOnDutyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    public delegate void GoOnDutyCompletedEventHandler(object sender, GoOnDutyCompletedEventArgs args);
    
    public partial class GoOffDutyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GoOffDutyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    public delegate void GoOffDutyCompletedEventHandler(object sender, GoOffDutyCompletedEventArgs args);
    
    public partial class UpdateLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    public delegate void UpdateLocationCompletedEventHandler(object sender, UpdateLocationCompletedEventArgs args);
    
    public partial class GetCurrentControllerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentControllerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Member Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Member)(this.results[0]));
            }
        }
    }
    
    public delegate void GetCurrentControllerCompletedEventHandler(object sender, GetCurrentControllerCompletedEventArgs args);
    
    public partial class GetCalendarBulletinsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCalendarBulletinsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    public delegate void GetCalendarBulletinsCompletedEventHandler(object sender, GetCalendarBulletinsCompletedEventArgs args);
    
    public partial class GetNextShiftCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextShiftCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CalendarEntry Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CalendarEntry)(this.results[0]));
            }
        }
    }
    
    public delegate void GetNextShiftCompletedEventHandler(object sender, GetNextShiftCompletedEventArgs args);
}
