using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using *****IDAL;
using *****DataContract;
using System.Data;
using System.Data.Common;

namespace *****DAL
{

	public class NewClassDAL : INewClassDAL
	{
		
		public NewClass Get(int newclassID)
		{
			NewClass ret = null;
			//TODO: Confirm sql
			DataTable t = DBHelper.ExecuteDataTable("Select * from NewClass where newclassId = " + newclassID);
			if (t != null)
			{
				ret = GetFromRow(t.Rows[0]);
			}
			return ret;
		}

		public int Save(NewClass newclass)
		{
			if (newclass.ID == -1)
			{
				return Create(newclass);
			}
			else
			{
				Update(newclass);
			}
		}

		public int Create(NewClass newclass)
		{
			string sql = 
#region AutoGenerated
				"INSERT INTO NewClass (" +
				", FirstName" +
				", LastName" +
				", JoinDate" +
				", EmailAddress" +
				", MobileNumber" +
				", HomeNumber" +
				", Occupation" +
				", MemberTypeID" +
				", MemberStatusID" +
				", AvailabilityID" +
				", RiderAssesmentPassDate" +
				", AdQualPassDate" +
				", AdQualType" +
				", BikeType" +
				", CarType" +
				", Notes" +
				", Address1" +
				", Address2" +
				", Address3" +
				", Town" +
				", County" +
				", PostCode" +
				", BirthYear" +
				", NextOfKin" +
				", NextOfKinAddress" +
				", NextOfKinPhone" +
				", LegalConfirmation" +
				", LeaveDate" +
				", LastGDPGMPDate" + ") values (" +
				", " + (newclass.FirstName != null ? "'" + *****.Utils.String.MakeSafe(newclass.FirstName) + "'" : "null") +
				", " + (newclass.LastName != null ? "'" + *****.Utils.String.MakeSafe(newclass.LastName) + "'" : "null") +
				", " + (newclass.JoinDate != null ? "'" + *****.Utils.String.MakeSafe(newclass.JoinDate.ToString("yyyy-MM-dd")) + "'" : "null") +
				", " + (newclass.EmailAddress != null ? "'" + *****.Utils.String.MakeSafe(newclass.EmailAddress) + "'" : "null") +
				", " + (newclass.MobileNumber != null ? "'" + *****.Utils.String.MakeSafe(newclass.MobileNumber) + "'" : "null") +
				", " + (newclass.HomeNumber != null ? "'" + *****.Utils.String.MakeSafe(newclass.HomeNumber) + "'" : "null") +
				", " + (newclass.Occupation != null ? "'" + *****.Utils.String.MakeSafe(newclass.Occupation) + "'" : "null") +
				", " + (newclass.MemberTypeID != null ? "'" + *****.Utils.String.MakeSafe(newclass.MemberTypeID) + "'" : "null") +
				", " + (newclass.MemberStatusID != null ? "'" + *****.Utils.String.MakeSafe(newclass.MemberStatusID) + "'" : "null") +
				", " + (newclass.AvailabilityID != null ? "'" + *****.Utils.String.MakeSafe(newclass.AvailabilityID) + "'" : "null") +
				", " + (newclass.RiderAssesmentPassDate != null ? "'" + *****.Utils.String.MakeSafe(newclass.RiderAssesmentPassDate.ToString("yyyy-MM-dd")) + "'" : "null") +
				", " + (newclass.AdQualPassDate != null ? "'" + *****.Utils.String.MakeSafe(newclass.AdQualPassDate.ToString("yyyy-MM-dd")) + "'" : "null") +
				", " + (newclass.AdQualType != null ? "'" + *****.Utils.String.MakeSafe(newclass.AdQualType) + "'" : "null") +
				", " + (newclass.BikeType != null ? "'" + *****.Utils.String.MakeSafe(newclass.BikeType) + "'" : "null") +
				", " + (newclass.CarType != null ? "'" + *****.Utils.String.MakeSafe(newclass.CarType) + "'" : "null") +
				", " + (newclass.Notes != null ? "'" + *****.Utils.String.MakeSafe(newclass.Notes) + "'" : "null") +
				", " + (newclass.Address1 != null ? "'" + *****.Utils.String.MakeSafe(newclass.Address1) + "'" : "null") +
				", " + (newclass.Address2 != null ? "'" + *****.Utils.String.MakeSafe(newclass.Address2) + "'" : "null") +
				", " + (newclass.Address3 != null ? "'" + *****.Utils.String.MakeSafe(newclass.Address3) + "'" : "null") +
				", " + (newclass.Town != null ? "'" + *****.Utils.String.MakeSafe(newclass.Town) + "'" : "null") +
				", " + (newclass.County != null ? "'" + *****.Utils.String.MakeSafe(newclass.County) + "'" : "null") +
				", " + (newclass.PostCode != null ? "'" + *****.Utils.String.MakeSafe(newclass.PostCode) + "'" : "null") +
				", " + (newclass.BirthYear != null ? "'" + *****.Utils.String.MakeSafe(newclass.BirthYear) + "'" : "null") +
				", " + (newclass.NextOfKin != null ? "'" + *****.Utils.String.MakeSafe(newclass.NextOfKin) + "'" : "null") +
				", " + (newclass.MextOfKinAddress != null ? "'" + *****.Utils.String.MakeSafe(newclass.MextOfKinAddress) + "'" : "null") +
				", " + (newclass.NextOfKinPhone != null ? "'" + *****.Utils.String.MakeSafe(newclass.NextOfKinPhone) + "'" : "null") +
				", " + (newclass.LegalConfirmation != null ? "'" + *****.Utils.String.MakeSafe(newclass.LegalConfirmation) + "'" : "null") +
				", " + (newclass.LeaveDate != null ? "'" + *****.Utils.String.MakeSafe(newclass.LeaveDate.ToString("yyyy-MM-dd")) + "'" : "null") +
				", " + (newclass.LastGDPGMPDate != null ? "'" + *****.Utils.String.MakeSafe(newclass.LastGDPGMPDate.ToString("yyyy-MM-dd")) + "'" : "null") +
				"); SELECT @@IDENTITY";
#endregion
			object ret = DBHelper.ExecuteScalar(sql);
			if (ret == DBNull.Value || ret == null) { return -1; }
			return int.Parse(ret.ToString());
		}	

		public int Create(NewClass newclass)
		{
			const string sql = 
#region AutoGenerated
				"INSERT INTO NewClass (" +
				", FirstName" +
				", LastName" +
				", JoinDate" +
				", EmailAddress" +
				", MobileNumber" +
				", HomeNumber" +
				", Occupation" +
				", MemberTypeID" +
				", MemberStatusID" +
				", AvailabilityID" +
				", RiderAssesmentPassDate" +
				", AdQualPassDate" +
				", AdQualType" +
				", BikeType" +
				", CarType" +
				", Notes" +
				", Address1" +
				", Address2" +
				", Address3" +
				", Town" +
				", County" +
				", PostCode" +
				", BirthYear" +
				", NextOfKin" +
				", NextOfKinAddress" +
				", NextOfKinPhone" +
				", LegalConfirmation" +
				", LeaveDate" +
				", LastGDPGMPDate" + ") values (" +
				", @FirstName" +
				", @LastName" +
				", @JoinDate" +
				", @EmailAddress" +
				", @MobileNumber" +
				", @HomeNumber" +
				", @Occupation" +
				", @MemberTypeID" +
				", @MemberStatusID" +
				", @AvailabilityID" +
				", @RiderAssesmentPassDate" +
				", @AdQualPassDate" +
				", @AdQualType" +
				", @BikeType" +
				", @CarType" +
				", @Notes" +
				", @Address1" +
				", @Address2" +
				", @Address3" +
				", @Town" +
				", @County" +
				", @PostCode" +
				", @BirthYear" +
				", @NextOfKin" +
				", @MextOfKinAddress" +
				", @NextOfKinPhone" +
				", @LegalConfirmation" +
				", @LeaveDate" +
				", @LastGDPGMPDate" +
				"); SELECT @@IDENTITY";

			DbCommand com = DBHelper.CreateDbCommand(sql);			
			DBHelper.AddCommandParameter(com, "@FirstName", DbType.string, ODHR.Utils.String.GetStringFromDbMember("FirstName", NewClass));
			DBHelper.AddCommandParameter(com, "@LastName", DbType.string, ODHR.Utils.String.GetStringFromDbMember("LastName", NewClass));
			DBHelper.AddCommandParameter(com, "@JoinDate", DbType.DateTime, newclass.JoinDate);
			DBHelper.AddCommandParameter(com, "@EmailAddress", DbType.string, ODHR.Utils.String.GetStringFromDbMember("EmailAddress", NewClass));
			DBHelper.AddCommandParameter(com, "@MobileNumber", DbType.string, ODHR.Utils.String.GetStringFromDbMember("MobileNumber", NewClass));
			DBHelper.AddCommandParameter(com, "@HomeNumber", DbType.string, ODHR.Utils.String.GetStringFromDbMember("HomeNumber", NewClass));
			DBHelper.AddCommandParameter(com, "@Occupation", DbType.string, ODHR.Utils.String.GetStringFromDbMember("Occupation", NewClass));
			DBHelper.AddCommandParameter(com, "@MemberTypeID", DbType.int, newclass.MemberTypeID);
			DBHelper.AddCommandParameter(com, "@MemberStatusID", DbType.int, newclass.MemberStatusID);
			DBHelper.AddCommandParameter(com, "@AvailabilityID", DbType.int, newclass.AvailabilityID);
			DBHelper.AddCommandParameter(com, "@RiderAssesmentPassDate", DbType.DateTime, newclass.RiderAssesmentPassDate);
			DBHelper.AddCommandParameter(com, "@AdQualPassDate", DbType.DateTime, newclass.AdQualPassDate);
			DBHelper.AddCommandParameter(com, "@AdQualType", DbType.string, ODHR.Utils.String.GetStringFromDbMember("AdQualType", NewClass));
			DBHelper.AddCommandParameter(com, "@BikeType", DbType.string, ODHR.Utils.String.GetStringFromDbMember("BikeType", NewClass));
			DBHelper.AddCommandParameter(com, "@CarType", DbType.string, ODHR.Utils.String.GetStringFromDbMember("CarType", NewClass));
			DBHelper.AddCommandParameter(com, "@Notes", DbType.string, ODHR.Utils.String.GetStringFromDbMember("Notes", NewClass));
			DBHelper.AddCommandParameter(com, "@Address1", DbType.string, ODHR.Utils.String.GetStringFromDbMember("Address1", NewClass));
			DBHelper.AddCommandParameter(com, "@Address2", DbType.string, ODHR.Utils.String.GetStringFromDbMember("Address2", NewClass));
			DBHelper.AddCommandParameter(com, "@Address3", DbType.string, ODHR.Utils.String.GetStringFromDbMember("Address3", NewClass));
			DBHelper.AddCommandParameter(com, "@Town", DbType.string, ODHR.Utils.String.GetStringFromDbMember("Town", NewClass));
			DBHelper.AddCommandParameter(com, "@County", DbType.string, ODHR.Utils.String.GetStringFromDbMember("County", NewClass));
			DBHelper.AddCommandParameter(com, "@PostCode", DbType.string, ODHR.Utils.String.GetStringFromDbMember("PostCode", NewClass));
			DBHelper.AddCommandParameter(com, "@BirthYear", DbType.int, newclass.BirthYear);
			DBHelper.AddCommandParameter(com, "@NextOfKin", DbType.string, ODHR.Utils.String.GetStringFromDbMember("NextOfKin", NewClass));
			DBHelper.AddCommandParameter(com, "@MextOfKinAddress", DbType.string, ODHR.Utils.String.GetStringFromDbMember("MextOfKinAddress", NewClass));
			DBHelper.AddCommandParameter(com, "@NextOfKinPhone", DbType.string, ODHR.Utils.String.GetStringFromDbMember("NextOfKinPhone", NewClass));
			DBHelper.AddCommandParameter(com, "@LegalConfirmation", DbType.bool, newclass.LegalConfirmation);
			DBHelper.AddCommandParameter(com, "@LeaveDate", DbType.DateTime, newclass.LeaveDate);
			DBHelper.AddCommandParameter(com, "@LastGDPGMPDate", DbType.DateTime, newclass.LastGDPGMPDate);
#endregion
			object ret = DBHelper.ExecuteScalarCommand(com);
			if (ret == DBNull.Value || ret == null) { return -1; }
			return int.Parse(ret.ToString());
		}	

		public void Create(NewClass newclass)
		{
			const string sql = 
#region AutoGenerated
				"INSERT INTO NewClass (" +
				", FirstName" +
				", LastName" +
				", JoinDate" +
				", EmailAddress" +
				", MobileNumber" +
				", HomeNumber" +
				", Occupation" +
				", MemberTypeID" +
				", MemberStatusID" +
				", AvailabilityID" +
				", RiderAssesmentPassDate" +
				", AdQualPassDate" +
				", AdQualType" +
				", BikeType" +
				", CarType" +
				", Notes" +
				", Address1" +
				", Address2" +
				", Address3" +
				", Town" +
				", County" +
				", PostCode" +
				", BirthYear" +
				", NextOfKin" +
				", NextOfKinAddress" +
				", NextOfKinPhone" +
				", LegalConfirmation" +
				", LeaveDate" +
				", LastGDPGMPDate" + ") values (" +
				", @FirstName" +
				", @LastName" +
				", @JoinDate" +
				", @EmailAddress" +
				", @MobileNumber" +
				", @HomeNumber" +
				", @Occupation" +
				", @MemberTypeID" +
				", @MemberStatusID" +
				", @AvailabilityID" +
				", @RiderAssesmentPassDate" +
				", @AdQualPassDate" +
				", @AdQualType" +
				", @BikeType" +
				", @CarType" +
				", @Notes" +
				", @Address1" +
				", @Address2" +
				", @Address3" +
				", @Town" +
				", @County" +
				", @PostCode" +
				", @BirthYear" +
				", @NextOfKin" +
				", @MextOfKinAddress" +
				", @NextOfKinPhone" +
				", @LegalConfirmation" +
				", @LeaveDate" +
				", @LastGDPGMPDate" +
				")";

			DbCommand com = DBHelper.CreateDbCommand(sql);			
			DBHelper.AddCommandParameter(com, "@FirstName", DbType.string, ODHR.Utils.String.GetStringFromDbMember("FirstName", NewClass));
			DBHelper.AddCommandParameter(com, "@LastName", DbType.string, ODHR.Utils.String.GetStringFromDbMember("LastName", NewClass));
			DBHelper.AddCommandParameter(com, "@JoinDate", DbType.DateTime, newclass.JoinDate);
			DBHelper.AddCommandParameter(com, "@EmailAddress", DbType.string, ODHR.Utils.String.GetStringFromDbMember("EmailAddress", NewClass));
			DBHelper.AddCommandParameter(com, "@MobileNumber", DbType.string, ODHR.Utils.String.GetStringFromDbMember("MobileNumber", NewClass));
			DBHelper.AddCommandParameter(com, "@HomeNumber", DbType.string, ODHR.Utils.String.GetStringFromDbMember("HomeNumber", NewClass));
			DBHelper.AddCommandParameter(com, "@Occupation", DbType.string, ODHR.Utils.String.GetStringFromDbMember("Occupation", NewClass));
			DBHelper.AddCommandParameter(com, "@MemberTypeID", DbType.int, newclass.MemberTypeID);
			DBHelper.AddCommandParameter(com, "@MemberStatusID", DbType.int, newclass.MemberStatusID);
			DBHelper.AddCommandParameter(com, "@AvailabilityID", DbType.int, newclass.AvailabilityID);
			DBHelper.AddCommandParameter(com, "@RiderAssesmentPassDate", DbType.DateTime, newclass.RiderAssesmentPassDate);
			DBHelper.AddCommandParameter(com, "@AdQualPassDate", DbType.DateTime, newclass.AdQualPassDate);
			DBHelper.AddCommandParameter(com, "@AdQualType", DbType.string, ODHR.Utils.String.GetStringFromDbMember("AdQualType", NewClass));
			DBHelper.AddCommandParameter(com, "@BikeType", DbType.string, ODHR.Utils.String.GetStringFromDbMember("BikeType", NewClass));
			DBHelper.AddCommandParameter(com, "@CarType", DbType.string, ODHR.Utils.String.GetStringFromDbMember("CarType", NewClass));
			DBHelper.AddCommandParameter(com, "@Notes", DbType.string, ODHR.Utils.String.GetStringFromDbMember("Notes", NewClass));
			DBHelper.AddCommandParameter(com, "@Address1", DbType.string, ODHR.Utils.String.GetStringFromDbMember("Address1", NewClass));
			DBHelper.AddCommandParameter(com, "@Address2", DbType.string, ODHR.Utils.String.GetStringFromDbMember("Address2", NewClass));
			DBHelper.AddCommandParameter(com, "@Address3", DbType.string, ODHR.Utils.String.GetStringFromDbMember("Address3", NewClass));
			DBHelper.AddCommandParameter(com, "@Town", DbType.string, ODHR.Utils.String.GetStringFromDbMember("Town", NewClass));
			DBHelper.AddCommandParameter(com, "@County", DbType.string, ODHR.Utils.String.GetStringFromDbMember("County", NewClass));
			DBHelper.AddCommandParameter(com, "@PostCode", DbType.string, ODHR.Utils.String.GetStringFromDbMember("PostCode", NewClass));
			DBHelper.AddCommandParameter(com, "@BirthYear", DbType.int, newclass.BirthYear);
			DBHelper.AddCommandParameter(com, "@NextOfKin", DbType.string, ODHR.Utils.String.GetStringFromDbMember("NextOfKin", NewClass));
			DBHelper.AddCommandParameter(com, "@MextOfKinAddress", DbType.string, ODHR.Utils.String.GetStringFromDbMember("MextOfKinAddress", NewClass));
			DBHelper.AddCommandParameter(com, "@NextOfKinPhone", DbType.string, ODHR.Utils.String.GetStringFromDbMember("NextOfKinPhone", NewClass));
			DBHelper.AddCommandParameter(com, "@LegalConfirmation", DbType.bool, newclass.LegalConfirmation);
			DBHelper.AddCommandParameter(com, "@LeaveDate", DbType.DateTime, newclass.LeaveDate);
			DBHelper.AddCommandParameter(com, "@LastGDPGMPDate", DbType.DateTime, newclass.LastGDPGMPDate);
#endregion
			DBHelper.ExecuteSQLCommand(com);
		}	

		public void Update(NewClass newclass)
		{
			// AUTO GENERATED DO NOT EDIT BY HAND
			string sql = 
#region AutoGenerated
				"UPDATE NewClass set " +
				", FirstName = '" + newclass.FirstName + "'" +
				", LastName = '" + newclass.LastName + "'" +
				", JoinDate = '" + newclass.JoinDate.ToString("yyyy-MM-dd") + "'" +
				", EmailAddress = '" + newclass.EmailAddress + "'" +
				", MobileNumber = '" + newclass.MobileNumber + "'" +
				", HomeNumber = '" + newclass.HomeNumber + "'" +
				", Occupation = '" + newclass.Occupation + "'" +
				", MemberTypeID = '" + newclass.MemberTypeID + "'" +
				", MemberStatusID = '" + newclass.MemberStatusID + "'" +
				", AvailabilityID = '" + newclass.AvailabilityID + "'" +
				", RiderAssesmentPassDate = '" + newclass.RiderAssesmentPassDate.ToString("yyyy-MM-dd") + "'" +
				", AdQualPassDate = '" + newclass.AdQualPassDate.ToString("yyyy-MM-dd") + "'" +
				", AdQualType = '" + newclass.AdQualType + "'" +
				", BikeType = '" + newclass.BikeType + "'" +
				", CarType = '" + newclass.CarType + "'" +
				", Notes = '" + newclass.Notes + "'" +
				", Address1 = '" + newclass.Address1 + "'" +
				", Address2 = '" + newclass.Address2 + "'" +
				", Address3 = '" + newclass.Address3 + "'" +
				", Town = '" + newclass.Town + "'" +
				", County = '" + newclass.County + "'" +
				", PostCode = '" + newclass.PostCode + "'" +
				", BirthYear = '" + newclass.BirthYear + "'" +
				", NextOfKin = '" + newclass.NextOfKin + "'" +
				", NextOfKinAddress = '" + newclass.MextOfKinAddress + "'" +
				", NextOfKinPhone = '" + newclass.NextOfKinPhone + "'" +
				", LegalConfirmation = '" + newclass.LegalConfirmation + "'" +
				", LeaveDate = '" + newclass.LeaveDate.ToString("yyyy-MM-dd") + "'" +
				", LastGDPGMPDate = '" + newclass.LastGDPGMPDate.ToString("yyyy-MM-dd") + "'" +
				" where NewClass_id = " + newclass.ID;
#endregion
			DBHelper.ExecuteSQL(sql);
		}

		private NewClass GetFromRow(DataRow r)
		{
			NewClass ret = new NewClass();
			// Todo: Confirm
#region AutoGenerated
			// AUTO GENERATED DO NOT EDIT BY HAND
						ret.ID = r["MemberID"] != DBNull.Value ? (int)r["MemberID"] : null;
			ret.FirstName = r["FirstName"] != DBNull.Value ? (string)r["FirstName"].ToString() : null;
			ret.LastName = r["LastName"] != DBNull.Value ? (string)r["LastName"].ToString() : null;
			ret.JoinDate = r["JoinDate"] != DBNull.Value ? (DateTime)r["JoinDate"] : null;
			ret.EmailAddress = r["EmailAddress"] != DBNull.Value ? (string)r["EmailAddress"].ToString() : null;
			ret.MobileNumber = r["MobileNumber"] != DBNull.Value ? (string)r["MobileNumber"].ToString() : null;
			ret.HomeNumber = r["HomeNumber"] != DBNull.Value ? (string)r["HomeNumber"].ToString() : null;
			ret.Occupation = r["Occupation"] != DBNull.Value ? (string)r["Occupation"].ToString() : null;
			ret.MemberTypeID = r["MemberTypeID"] != DBNull.Value ? (int)r["MemberTypeID"] : null;
			ret.MemberStatusID = r["MemberStatusID"] != DBNull.Value ? (int)r["MemberStatusID"] : null;
			ret.AvailabilityID = r["AvailabilityID"] != DBNull.Value ? (int)r["AvailabilityID"] : null;
			ret.RiderAssesmentPassDate = r["RiderAssesmentPassDate"] != DBNull.Value ? (DateTime)r["RiderAssesmentPassDate"] : null;
			ret.AdQualPassDate = r["AdQualPassDate"] != DBNull.Value ? (DateTime)r["AdQualPassDate"] : null;
			ret.AdQualType = r["AdQualType"] != DBNull.Value ? (string)r["AdQualType"].ToString() : null;
			ret.BikeType = r["BikeType"] != DBNull.Value ? (string)r["BikeType"].ToString() : null;
			ret.CarType = r["CarType"] != DBNull.Value ? (string)r["CarType"].ToString() : null;
			ret.Notes = r["Notes"] != DBNull.Value ? (string)r["Notes"].ToString() : null;
			ret.Address1 = r["Address1"] != DBNull.Value ? (string)r["Address1"].ToString() : null;
			ret.Address2 = r["Address2"] != DBNull.Value ? (string)r["Address2"].ToString() : null;
			ret.Address3 = r["Address3"] != DBNull.Value ? (string)r["Address3"].ToString() : null;
			ret.Town = r["Town"] != DBNull.Value ? (string)r["Town"].ToString() : null;
			ret.County = r["County"] != DBNull.Value ? (string)r["County"].ToString() : null;
			ret.PostCode = r["PostCode"] != DBNull.Value ? (string)r["PostCode"].ToString() : null;
			ret.BirthYear = r["BirthYear"] != DBNull.Value ? (int)r["BirthYear"] : null;
			ret.NextOfKin = r["NextOfKin"] != DBNull.Value ? (string)r["NextOfKin"].ToString() : null;
			ret.MextOfKinAddress = r["NextOfKinAddress"] != DBNull.Value ? (string)r["NextOfKinAddress"].ToString() : null;
			ret.NextOfKinPhone = r["NextOfKinPhone"] != DBNull.Value ? (string)r["NextOfKinPhone"].ToString() : null;
			ret.LegalConfirmation = r["LegalConfirmation"] != DBNull.Value ? (bool)r["LegalConfirmation"] : null;
			ret.LeaveDate = r["LeaveDate"] != DBNull.Value ? (DateTime)r["LeaveDate"] : null;
			ret.LastGDPGMPDate = r["LastGDPGMPDate"] != DBNull.Value ? (DateTime)r["LastGDPGMPDate"] : null;

#endregion
			return ret;
		}

		public List<NewClass> List(string search)
		{
			List<NewClass> ret = new List<NewClass>();
			//TODO: Confirm sql
			DataTable t = DBHelper.ExecuteDataTable("Select * from NewClass where NewClass like '%" + search + "%'");
			if (t != null)
			{
				foreach (DataRow r in t.Rows)
				{
					ret.Add(GetFromRow(r));
				}
			}
			return ret;
		}

	}

}
